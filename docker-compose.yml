services:
  flask:
    build: .
    container_name: flask_app
    ports:
      - "5000:5000"  # 映射端口
    env_file:
      - .env  # 载入 .env 文件中的环境变量
    environment:
      MYSQL_HOST: mysql  # Flask 容器会连接到名为 mysql 的 MySQL 服务
      MYSQL_USER: root
      MYSQL_PASSWORD: password
      MYSQL_DB: oaifree
    depends_on:
      mysql:
        condition: service_healthy  # 只有在 MySQL 服务健康时，Flask 才会启动
    command: bash -c "sleep 10 && flask run --host=0.0.0.0"

  mysql:
    image: mysql:8.0  # 使用官方的 MySQL 8.0 镜像
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: password  # 设置 MySQL root 密码
      MYSQL_DATABASE: oaifree  # 创建数据库
    ports:
      - "3306:3306"  # 映射 MySQL 的端口
    volumes:
      - mysql_data:/var/lib/mysql  # 持久化数据
      - ./init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 30s
      retries: 5
      start_period: 30s
      timeout: 10s
volumes:
  mysql_data:
    driver: local  # 使用 Docker 卷持久化 MySQL 数据
